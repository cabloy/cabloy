{"version":3,"file":"backend.js","mappings":"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","sources":["webpack://egg-born-module-a-summer/./backend/src/aops.js","webpack://egg-born-module-a-summer/./backend/src/bean/bean.summer.js","webpack://egg-born-module-a-summer/./backend/src/bean/broadcast.memClear.js","webpack://egg-born-module-a-summer/./backend/src/bean/broadcast.memDel.js","webpack://egg-born-module-a-summer/./backend/src/bean/broadcast.memMultiDel.js","webpack://egg-born-module-a-summer/./backend/src/bean/local.cache.js","webpack://egg-born-module-a-summer/./backend/src/bean/local.fetch.js","webpack://egg-born-module-a-summer/./backend/src/bean/local.mem.js","webpack://egg-born-module-a-summer/./backend/src/bean/local.redis.js","webpack://egg-born-module-a-summer/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-summer/./backend/src/beans.js","webpack://egg-born-module-a-summer/./backend/src/common/cacheBase.js","webpack://egg-born-module-a-summer/./backend/src/config/config.js","webpack://egg-born-module-a-summer/./backend/src/config/errors.js","webpack://egg-born-module-a-summer/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-summer/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-summer/./backend/src/config/locales.js","webpack://egg-born-module-a-summer/./backend/src/config/static/layouts.js","webpack://egg-born-module-a-summer/./backend/src/config/static/resources.js","webpack://egg-born-module-a-summer/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-summer/./backend/src/controllers.js","webpack://egg-born-module-a-summer/./backend/src/main.js","webpack://egg-born-module-a-summer/./backend/src/meta.js","webpack://egg-born-module-a-summer/./backend/src/models.js","webpack://egg-born-module-a-summer/./backend/src/routes.js","webpack://egg-born-module-a-summer/./backend/src/services.js","webpack://egg-born-module-a-summer/external commonjs2 \"require3\"","webpack://egg-born-module-a-summer/webpack/bootstrap","webpack://egg-born-module-a-summer/webpack/startup"],"sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","let __cacheBases;\n\nmodule.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Summer extends ctx.app.meta.BeanModuleBase {\n    constructor(moduleName) {\n      super(ctx, 'summer');\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    getCache({ module, name, fullKey }) {\n      module = module || this.moduleName;\n      const cacheBase = this._findCacheBase({ module, name, fullKey });\n      return ctx.bean._newBean(`${moduleInfo.relativeName}.local.cache`, {\n        cacheBase,\n      });\n    }\n\n    async get(cacheName, key, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.get(key, options);\n    }\n\n    async mget(cacheName, keys, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.mget(keys, options);\n    }\n\n    async del(cacheName, key, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.del(key, options);\n    }\n\n    async mdel(cacheName, keys, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.mdel(keys, options);\n    }\n\n    async clear(cacheName, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.clear(options);\n    }\n\n    async peek(cacheName, key, options) {\n      const cache = this.getCache(cacheName);\n      return await cache.peek(key, options);\n    }\n\n    _findCacheBase({ module, name, fullKey }) {\n      module = module || this.moduleName;\n      if (!fullKey) {\n        fullKey = `${module}:${name}`;\n      }\n      if (!__cacheBases) {\n        __cacheBases = this._collectCacheBases();\n      }\n      const cacheBase = __cacheBases[fullKey];\n      if (!cacheBase) throw new Error(`summer cache not found: ${fullKey}`);\n      return cacheBase;\n    }\n\n    _collectCacheBases() {\n      const cacheBases = {};\n      for (const module of ctx.app.meta.modulesArray) {\n        const config = ctx.app.meta.configs[module.info.relativeName];\n        const caches = ctx.bean.util.getProperty(config, 'summer.caches');\n        if (!caches) continue;\n        for (const key in caches) {\n          const cache = caches[key];\n          const fullKey = `${module.info.relativeName}:${key}`;\n          // bean\n          const beanName = cache.bean;\n          let beanFullName;\n          if (typeof beanName === 'string') {\n            beanFullName = `${module.info.relativeName}.summer.cache.${beanName}`;\n          } else {\n            beanFullName = `${beanName.module || module.info.relativeName}.summer.cache.${beanName.name}`;\n          }\n          // ok\n          cacheBases[fullKey] = {\n            ...cache,\n            key,\n            fullKey,\n            beanFullName,\n          };\n        }\n      }\n      return cacheBases;\n    }\n  }\n\n  return Summer;\n};\n","module.exports = app => {\n  class Broadcast extends app.meta.BeanBase {\n    async execute(context) {\n      const sameAsCaller = context.sameAsCaller;\n      const { fullKey, options } = context.data;\n      if (!sameAsCaller) {\n        const cache = this.ctx.bean.summer.getCache({ fullKey });\n        cache.localMem.__clearRaw(options);\n      }\n    }\n  }\n\n  return Broadcast;\n};\n","module.exports = app => {\n  class Broadcast extends app.meta.BeanBase {\n    async execute(context) {\n      const sameAsCaller = context.sameAsCaller;\n      const { fullKey, keyHash, key, options } = context.data;\n      if (!sameAsCaller) {\n        const cache = this.ctx.bean.summer.getCache({ fullKey });\n        cache.localMem.__delRaw(keyHash, key, options);\n      }\n    }\n  }\n\n  return Broadcast;\n};\n","module.exports = app => {\n  class Broadcast extends app.meta.BeanBase {\n    async execute(context) {\n      const sameAsCaller = context.sameAsCaller;\n      const { fullKey, keysHash, keys, options } = context.data;\n      if (!sameAsCaller) {\n        const cache = this.ctx.bean.summer.getCache({ fullKey });\n        cache.localMem.__mdelRaw(keysHash, keys, options);\n      }\n    }\n  }\n\n  return Broadcast;\n};\n","const require3 = require('require3');\nconst objectHash = require3('object-hash');\nconst CacheBase = require('../common/cacheBase.js');\n\nmodule.exports = ctx => {\n  // const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class LocalCache extends CacheBase(ctx) {\n    constructor({ cacheBase }) {\n      super({ cacheBase });\n    }\n\n    async get(key, options) {\n      const keyHash = this.__getKeyHash(key);\n      const layered = this.__getLayered(options);\n      return await layered.get(keyHash, key, options);\n    }\n\n    async mget(keys, options) {\n      if (!keys || keys.length === 0) {\n        return [];\n      }\n      const keysHash = this.__getKeysHash(keys);\n      const layered = this.__getLayered(options);\n      return await layered.mget(keysHash, keys, options);\n    }\n\n    async del(key, options) {\n      const keyHash = this.__getKeyHash(key);\n      const layered = this.__getLayered(options);\n      return await layered.del(keyHash, key, options);\n    }\n\n    async mdel(keys, options) {\n      if (!keys || keys.length === 0) {\n        return [];\n      }\n      const keysHash = this.__getKeysHash(keys);\n      const layered = this.__getLayered(options);\n      return await layered.mdel(keysHash, keys, options);\n    }\n\n    async clear(options) {\n      const layered = this.__getLayered(options);\n      return await layered.clear(options);\n    }\n\n    async peek(key, options) {\n      const keyHash = this.__getKeyHash(key);\n      const layered = this.__getLayered(options);\n      return await layered.peek(keyHash, key, options);\n    }\n\n    __getLayered(options) {\n      const mode = this.__getOptionsMode(options);\n      if (mode === 'all' || mode === 'mem') {\n        return this.localMem;\n      }\n      return this.localRedis;\n    }\n\n    __getKeyHash(key) {\n      if (!key) throw new Error('key is required');\n      if (Array.isArray(key) || typeof key === 'object') {\n        key = objectHash(key);\n      } else if (typeof key !== 'string') {\n        key = String(key);\n      }\n      return key;\n    }\n\n    __getKeysHash(keys) {\n      return keys.map(key => this.__getKeyHash(key));\n    }\n  }\n\n  return LocalCache;\n};\n","const CacheBase = require('../common/cacheBase.js');\n\nmodule.exports = ctx => {\n  class LocalFetch extends CacheBase(ctx) {\n    constructor({ cacheBase }) {\n      super({ cacheBase });\n      this._cacheBean = null;\n    }\n\n    async get(keyHash, key, options) {\n      return await this.cacheBean.get(key, options, keyHash);\n    }\n\n    async mget(keysHash, keys, options) {\n      // mget\n      if (this.cacheBean.mget) {\n        return await this.cacheBean.mget(keys, options, keysHash);\n      }\n      // fallback\n      const values = [];\n      for (let i = 0; i < keys.length; i++) {\n        values.push(await this.get(keysHash[i], keys[i], options));\n      }\n      return values;\n    }\n\n    async peek(/* keyHash, key, options*/) {\n      // just return undefined\n      return undefined;\n    }\n\n    async del(/* keyHash , key, options*/) {\n      // do nothing\n    }\n\n    async mdel(/* keysHash, keys, options*/) {\n      // do nothing\n    }\n\n    async clear(/* options*/) {\n      // do nothing\n    }\n\n    get cacheBean() {\n      if (!this._cacheBean) {\n        this._cacheBean = ctx.bean._newBean(this._cacheBase.beanFullName, {\n          cacheBase: this._cacheBase,\n        });\n      }\n      return this._cacheBean;\n    }\n  }\n\n  return LocalFetch;\n};\n","const require3 = require('require3');\nconst LRUCache = require3('lru-cache');\nconst CacheBase = require('../common/cacheBase.js');\n\nconst SUMMERCACHEMEMORY = Symbol('APP#__SUMMERCACHEMEMORY');\n\nmodule.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class LocalMem extends CacheBase(ctx) {\n    constructor({ cacheBase }) {\n      super({ cacheBase });\n      this._lruCache = null;\n    }\n\n    async get(keyHash, key, options) {\n      let value = this.lruCache.get(keyHash);\n      if (value === undefined) {\n        const layered = this.__getLayered(options);\n        value = await layered.get(keyHash, key, options);\n        this.lruCache.set(keyHash, value);\n      }\n      return value;\n    }\n\n    async mget(keysHash, keys, options) {\n      // peek\n      const values = keysHash.map(keyHash => this.lruCache.peek(keyHash));\n      const keysHashMissing = [];\n      const keysMissing = [];\n      const indexesMissing = [];\n      for (let i = 0; i < values.length; i++) {\n        if (values[i] === undefined) {\n          keysHashMissing.push(keysHash[i]);\n          keysMissing.push(keys[i]);\n          indexesMissing.push(i);\n        }\n      }\n      // mget\n      if (keysHashMissing.length > 0) {\n        const layered = this.__getLayered(options);\n        const valuesMissing = await layered.mget(keysHashMissing, keysMissing, options);\n        // console.log('-------mem:', valuesMissing);\n        // set/merge\n        for (let i = 0; i < keysHashMissing.length; i++) {\n          const valueMissing = valuesMissing[i];\n          this.lruCache.set(keysHashMissing[i], valueMissing);\n          values[indexesMissing[i]] = valueMissing;\n        }\n      }\n      // ok\n      return values;\n    }\n\n    async del(keyHash, key, options) {\n      // del on this worker\n      this.lruCache.delete(keyHash);\n      // del on other workers by broadcast\n      ctx.meta.util.broadcastEmit({\n        module: moduleInfo.relativeName,\n        broadcastName: 'memDel',\n        data: { fullKey: this._cacheBase.fullKey, keyHash, key, options },\n      });\n      // del layered\n      const layered = this.__getLayered(options);\n      await layered.del(keyHash, key, options);\n    }\n\n    async mdel(keysHash, keys, options) {\n      // del on this worker\n      keysHash.forEach(keyHash => this.lruCache.delete(keyHash));\n      // del on other workers by broadcast\n      ctx.meta.util.broadcastEmit({\n        module: moduleInfo.relativeName,\n        broadcastName: 'memMultiDel',\n        data: { fullKey: this._cacheBase.fullKey, keysHash, keys, options },\n      });\n      // del layered\n      const layered = this.__getLayered(options);\n      await layered.mdel(keysHash, keys, options);\n    }\n\n    async clear(options) {\n      // clear on this worker\n      this.lruCache.clear();\n      // clear on other workers by broadcast\n      ctx.meta.util.broadcastEmit({\n        module: moduleInfo.relativeName,\n        broadcastName: 'memClear',\n        data: { fullKey: this._cacheBase.fullKey, options },\n      });\n      // clear layered\n      const layered = this.__getLayered(options);\n      await layered.clear(options);\n    }\n\n    async peek(keyHash, key, options) {\n      let value = this.lruCache.peek(keyHash);\n      if (value === undefined) {\n        const layered = this.__getLayered(options);\n        value = await layered.peek(keyHash, key, options);\n      }\n      return value;\n    }\n\n    __delRaw(keyHash /* , key, options*/) {\n      this.lruCache.delete(keyHash);\n    }\n\n    __mdelRaw(keysHash /* , keys, options*/) {\n      keysHash.forEach(keyHash => this.lruCache.delete(keyHash));\n    }\n\n    __clearRaw(/* options*/) {\n      this.lruCache.clear();\n    }\n\n    __getLayered(options) {\n      const mode = this.__getOptionsMode(options);\n      if (mode === 'all') {\n        return this.localRedis;\n      }\n      return this.localFetch;\n    }\n\n    get lruCache() {\n      if (!this._lruCache) {\n        this._lruCache = this.memoryInstance[this._cacheBase.fullKey];\n        if (!this._lruCache) {\n          this._lruCache = this.memoryInstance[this._cacheBase.fullKey] = new LRUCache(this._cacheBase.mem);\n        }\n      }\n      return this._lruCache;\n    }\n\n    get memoryInstance() {\n      if (!ctx.app[SUMMERCACHEMEMORY]) {\n        ctx.app[SUMMERCACHEMEMORY] = {};\n      }\n      if (!ctx.app[SUMMERCACHEMEMORY][ctx.subdomain]) {\n        ctx.app[SUMMERCACHEMEMORY][ctx.subdomain] = {};\n      }\n      return ctx.app[SUMMERCACHEMEMORY][ctx.subdomain];\n    }\n  }\n\n  return LocalMem;\n};\n","const CacheBase = require('../common/cacheBase.js');\n\nmodule.exports = ctx => {\n  class LocalRedis extends CacheBase(ctx) {\n    constructor({ cacheBase }) {\n      super({ cacheBase });\n      this._redisSummer = null;\n    }\n\n    async get(keyHash, key, options) {\n      const redisKey = this._getRedisKey(keyHash);\n      let value = await this.redisSummer.get(redisKey);\n      value = value ? JSON.parse(value) : undefined;\n      if (value === undefined) {\n        const layered = this.__getLayered(options);\n        value = await layered.get(keyHash, key, options);\n        await this.redisSummer.set(redisKey, JSON.stringify(value), 'PX', this._cacheBase.redis.ttl);\n      }\n      return value;\n    }\n\n    async mget(keysHash, keys, options) {\n      // peek\n      const redisKeys = keysHash.map(keyHash => this._getRedisKey(keyHash));\n      let values = await this.redisSummer.mget(redisKeys);\n      values = values.map(v => (v ? JSON.parse(v) : undefined));\n      const redisKeysMissing = [];\n      const keysHashMissing = [];\n      const keysMissing = [];\n      const indexesMissing = [];\n      for (let i = 0; i < values.length; i++) {\n        if (values[i] === undefined) {\n          redisKeysMissing.push(redisKeys[i]);\n          keysHashMissing.push(keysHash[i]);\n          keysMissing.push(keys[i]);\n          indexesMissing.push(i);\n        }\n      }\n      // mget\n      if (keysHashMissing.length > 0) {\n        const layered = this.__getLayered(options);\n        const valuesMissing = await layered.mget(keysHashMissing, keysMissing, options);\n        // console.log('-------redis:', valuesMissing);\n        // set/merge\n        const multi = this.redisSummer.multi();\n        for (let i = 0; i < keysHashMissing.length; i++) {\n          const valueMissing = valuesMissing[i];\n          multi.setex(redisKeysMissing[i], Math.trunc(this._cacheBase.redis.ttl / 1000), JSON.stringify(valueMissing));\n          values[indexesMissing[i]] = valueMissing;\n        }\n        await multi.exec();\n      }\n      // ok\n      return values;\n    }\n\n    async del(keyHash /* , key, options*/) {\n      const redisKey = this._getRedisKey(keyHash);\n      await this.redisSummer.del(redisKey);\n    }\n\n    async mdel(keysHash /* , keys, options*/) {\n      const redisKeys = keysHash.map(keyHash => this._getRedisKey(keyHash));\n      await this.redisSummer.del(redisKeys);\n    }\n\n    async clear(/* options*/) {\n      const redisKey = this._getRedisKey('*');\n      const keyPrefix = this.redisSummer.options.keyPrefix;\n      const keyPattern = `${keyPrefix}${redisKey}`;\n      const keys = await this.redisSummer.keys(keyPattern);\n      const keysDel = [];\n      for (const fullKey of keys) {\n        const key = keyPrefix ? fullKey.substr(keyPrefix.length) : fullKey;\n        keysDel.push(key);\n      }\n      if (keysDel.length > 0) {\n        await this.redisSummer.del(keysDel);\n      }\n    }\n\n    async peek(keyHash /* , key, options*/) {\n      const redisKey = this._getRedisKey(keyHash);\n      let value = await this.redisSummer.get(redisKey);\n      value = value ? JSON.parse(value) : undefined;\n      // need not call layered.peek\n      // if (value === undefined) {\n      //   const layered = this.__getLayered(options);\n      //   value = await layered.peek(keyHash, key, options);\n      // }\n      return value;\n    }\n\n    __getLayered(/* options*/) {\n      return this.localFetch;\n    }\n\n    get redisSummer() {\n      if (!this._redisSummer) {\n        this._redisSummer = ctx.app.redis.get('summer');\n      }\n      return this._redisSummer;\n    }\n\n    _getRedisKey(key) {\n      return `${ctx.instance.id}!${this._cacheBase.fullKey}!${key}`;\n    }\n  }\n\n  return LocalRedis;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {}\n\n    async init(options) {}\n\n    async test() {}\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst beanSummer = require('./bean/bean.summer.js');\nconst localCache = require('./bean/local.cache.js');\nconst localMem = require('./bean/local.mem.js');\nconst localRedis = require('./bean/local.redis.js');\nconst localFetch = require('./bean/local.fetch.js');\nconst broadcastMemDel = require('./bean/broadcast.memDel.js');\nconst broadcastMemMultiDel = require('./bean/broadcast.memMultiDel.js');\nconst broadcastMemClear = require('./bean/broadcast.memClear.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // local\n    'local.cache': {\n      mode: 'ctx',\n      bean: localCache,\n    },\n    'local.mem': {\n      mode: 'ctx',\n      bean: localMem,\n    },\n    'local.redis': {\n      mode: 'ctx',\n      bean: localRedis,\n    },\n    'local.fetch': {\n      mode: 'ctx',\n      bean: localFetch,\n    },\n    // broadcast\n    'broadcast.memDel': {\n      mode: 'app',\n      bean: broadcastMemDel,\n    },\n    'broadcast.memMultiDel': {\n      mode: 'app',\n      bean: broadcastMemMultiDel,\n    },\n    'broadcast.memClear': {\n      mode: 'app',\n      bean: broadcastMemClear,\n    },\n    // summer\n    summer: {\n      mode: 'ctx',\n      bean: beanSummer,\n      global: true,\n    },\n  };\n  return beans;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class CacheBase {\n    constructor({ cacheBase }) {\n      this._cacheBase = cacheBase;\n      this._localMem = null;\n      this._localRedis = null;\n      this._localFetch = null;\n    }\n\n    get localMem() {\n      if (!this._localMem) {\n        this._localMem = ctx.bean._newBean(`${moduleInfo.relativeName}.local.mem`, {\n          cacheBase: this._cacheBase,\n        });\n      }\n      return this._localMem;\n    }\n\n    get localRedis() {\n      if (!this._localRedis) {\n        this._localRedis = ctx.bean._newBean(`${moduleInfo.relativeName}.local.redis`, {\n          cacheBase: this._cacheBase,\n        });\n      }\n      return this._localRedis;\n    }\n\n    get localFetch() {\n      if (!this._localFetch) {\n        this._localFetch = ctx.bean._newBean(`${moduleInfo.relativeName}.local.fetch`, {\n          cacheBase: this._cacheBase,\n        });\n      }\n      return this._localFetch;\n    }\n\n    __getOptionsMode(options) {\n      const mode = options && options.mode;\n      return mode || this._cacheBase.mode || 'all';\n    }\n  }\n\n  return CacheBase;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // broadcasts\n  config.broadcasts = {\n    memDel: {\n      bean: 'memDel',\n    },\n    memMultiDel: {\n      bean: 'memMultiDel',\n    },\n    memClear: {\n      bean: 'memClear',\n    },\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {};\n","module.exports = {};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const layouts = [];\n  return layouts;\n};\n","module.exports = app => {\n  const resources = [];\n  return resources;\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n","module.exports = app => {\n  const controllers = {};\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  // schemas\n  const schemas = require('./config/validation/schemas.js')(app);\n  // static\n  const staticLayouts = require('./config/static/layouts.js')(app);\n  const staticResources = require('./config/static/resources.js')(app);\n  const meta = {\n    base: {\n      atoms: {},\n      statics: {\n        'a-baselayout.layout': {\n          items: staticLayouts,\n        },\n        'a-base.resource': {\n          items: staticResources,\n        },\n      },\n    },\n    validation: {\n      validators: {},\n      keywords: {},\n      schemas,\n    },\n    index: {\n      indexes: {},\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {};\n  return models;\n};\n","module.exports = app => {\n  const routes = [];\n  return routes;\n};\n","module.exports = app => {\n  const services = {};\n  return services;\n};\n","module.exports = require(\"require3\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(312);\n"],"names":["module","exports","app","__cacheBases","ctx","moduleInfo","meta","mockUtil","parseInfoFromPackage","__dirname","Summer","BeanModuleBase","constructor","moduleName","super","this","info","relativeName","getCache","name","fullKey","cacheBase","_findCacheBase","bean","_newBean","cacheName","key","options","cache","get","keys","mget","del","mdel","clear","peek","_collectCacheBases","Error","cacheBases","modulesArray","config","configs","caches","util","getProperty","beanName","beanFullName","Broadcast","BeanBase","context","sameAsCaller","data","summer","localMem","__clearRaw","keyHash","__delRaw","keysHash","__mdelRaw","objectHash","require","require3","CacheBase","LocalCache","__getKeyHash","layered","__getLayered","length","__getKeysHash","mode","__getOptionsMode","localRedis","Array","isArray","String","map","LocalFetch","_cacheBean","cacheBean","values","i","push","undefined","_cacheBase","LRUCache","SUMMERCACHEMEMORY","Symbol","LocalMem","_lruCache","value","lruCache","set","keysHashMissing","keysMissing","indexesMissing","valuesMissing","valueMissing","delete","broadcastEmit","broadcastName","forEach","localFetch","memoryInstance","mem","subdomain","LocalRedis","_redisSummer","redisKey","_getRedisKey","redisSummer","JSON","parse","stringify","redis","ttl","redisKeys","v","redisKeysMissing","multi","setex","Math","trunc","exec","keyPrefix","keyPattern","keysDel","substr","instance","id","Version","versionManager","beanSummer","localCache","broadcastMemDel","broadcastMemMultiDel","broadcastMemClear","global","_localMem","_localRedis","_localFetch","appInfo","memDel","memMultiDel","memClear","locales","errors","aops","beans","routes","controllers","services","models","schemas","base","atoms","statics","items","validation","validators","keywords","index","indexes","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}